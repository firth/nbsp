#
# $Id$
#

There are several scripts that extract or process the data that is written
to the various files in

	/var/noaaport/nbsp/stats

Most of that data is displayed in several ways in the built-in
web server pages.

In addition, the folowing scripts can be used from the command line

	- nbspstatcounters
	- nbspstats
	- nbspstatmonitor

and the last minute data can also be retrieved remotely by a url such as

	http://<host.domain>:8015/_inbsp/stats
	http://<host.domain>:8015/_inbsp/monitor

The three scripts are useful for local monitoring, while the web
interface can be used for remote monitoring.

Quick description
=================

- nbspstatcounters 

  Usage: nbspstatcounters [-f <fmt>] [-c <chstatsfile> \
                          [-q <qstatefile>] [-s <statusfile>]

Output the nbsp counters in the last minute. The counters contain
files and frames received, missing, errors and so on (statusfile),
the state of the processor, filter and server queues (qstatefile),
and the files and bytes received in each channel (chstatsfile).

If no <statusfile> is given the default nbspd.status file is used.
If no <qstatefile> is given the default nbspd.qstate file is used.
If no <chstatsfile> is given the default is <hh>.stats for the current hour.
The <fmt> can be: std (default), xml, csv, csvk
The motivation for the existence of this tool is to use it for extracting
and feeding the data to rrdtool or similar programs.

The <chstatsfile> is a log file of the inventory filter (not an nbspd file)
and includes received, for example, by external programs such as ldm or nntp.

- nbspstats

  Usage: nbspstats [-l <statsawkscript>] -q <statefile>] [-s <statusfile>]
                 [stats|qstate]

Output a "stats" summary report (stats) or the state of the
processor, filter and server queues (qstate).

If no command is given, "stats" is assumed. The -l option can be used
to specify an awk script for the "stats" report.

- nbspstatmonitor

  Usage: nbspstatmonitor  [-f <fmt>]
  
This script analyzes only the nbspd files (status and qstate) and
therefore is useful for monitoring the health of a receiving
noaaport system. It retrieves the "stats" counters using the script
nbspstatcounters and makes some tests to determine the health of the server.
The output is formatted similarly to the output from nbspstatcounter,
but with the following variables:

monitor_code - 0 or an error code
poll_time    - time at which the script is called
stats_time   - time at which the server logged the stats
chstats_time - time at which the inventory filter logged the last minute stats
stats_timediff - difference between poll and stats times
chstats_timediff - difference between poll and chstats times
total_files  - total number of files received by the inventory filter
total_bytes  - total number of bytes received by the inventory filter

The code returned in monitor_code is 0 (no error) or

err_stats_time 1   - if the difference between poll and stats times > 60
err_chstats_time 2 - if the difference between poll and chstats times > 60
err_chstats_data 3 - if total_files or total_bytes are zero

- http://<host.domain>:8015/_inbsp/stats

For example

  curl -s -S http://<host.domain>:8015/_inbsp/stats

will output the last minute data in the same format as the
nbspstatcounters script. Similarly, 

    curl -s -S http://<host.domain>:8015/_inbsp/stats?format=xxx

can be used to retrieve the data in the same formats as described
above for nbspstatcounters (replacing xxx by the appropriate value,
csv, xml, ...). The data can be used to feed rrdtool or similar programs.

- http://<host.domain>:8015/_inbsp/monitor

For example

  curl -s -S http://<host.domain>:8015/_inbsp/monitor

will output a one-line record of the data summary, including in the first field
an entry of the form "monitor_code=0", in the same form as the
nbspmonitor script described above. If there are errors in the server
(e.g., no data received) there will be a non-zero code following the
equals sign. This facility is used by the "monit" sample conf file
"monit.nbsp.conf-sample".
