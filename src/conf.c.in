/*
 * Copyright (c) 2005-2007 Jose F. Nieves <nieves@ltp.upr.clu.edu>
 *
 * See LICENSE
 *
 * $Id$
 */
#include <stdio.h>
#include <err.h>
#include <tcl.h>
#include "libtclconf/tclconf.h"
#include "defaults.h"
#include "globals.h"
#include "conf.h"

#define CONFOPT_USER			@counter@
#define DEFVAL_USER			NBSP_USER

#define CONFOPT_GROUP			@counter@
#define DEFVAL_GROUP			NBSP_GROUP

#define CONFOPT_HOME			@counter@
#define DEFVAL_HOME			NBSP_HOME

#define CONFOPT_UMASK			@counter@
#define DEFVAL_UMASK			DEFAULT_UMASK

#define CONFOPT_MULTICASTIP		@counter@
#define DEFVAL_MULTICASTIP		MULTICASTIP

#define CONFOPT_MULTICASTPORT		@counter@
#define DEFVAL_MULTICASTPORT		MULTICASTPORT

#define CONFOPT_MULTICASTIFNAME		@counter@
#define DEFVAL_MULTICASTIFNAME		NULL

#define CONFOPT_MULTICASTIFIP		@counter@
#define DEFVAL_MULTICASTIFIP		NULL

#define CONFOPT_UDPRCVSIZE		@counter@
#define DEFVAL_UDPRCVSIZE		UDP_RCV_SIZE

#define CONFOPT_STARTSCRIPT		@counter@
#define DEFVAL_STARTSCRIPT		START_SCRIPT

#define CONFOPT_STOPSCRIPT		@counter@
#define DEFVAL_STOPSCRIPT		STOP_SCRIPT

#define CONFOPT_SCHEDULER		@counter@
#define DEFVAL_SCHEDULER		SCHEDULER

#define CONFOPT_SPOOLTYPE		@counter@
#define DEFVAL_SPOOLTYPE		SPOOLTYPE_DEFAULT

#define CONFOPT_SPOOLDIR		@counter@
#define DEFVAL_SPOOLDIR			NBSP_SPOOL_DIR

#define CONFOPT_SPOOLDB_SLOTS		@counter@
#define DEFVAL_SPOOLDB_SLOTS		SPOOLDB_SLOTS

#define CONFOPT_SPOOLDB_FNAME		@counter@
#define DEFVAL_SPOOLDB_FNAME		SPOOLDB_FNAME

#define CONFOPT_CSPOOLBDB_DIR		@counter@
#define DEFVAL_CSPOOLBDB_DIR		CSPOOLBDB_DIR

#define CONFOPT_CSPOOLBDB_NAME		@counter@
#define DEFVAL_CSPOOLBDB_NAME		CSPOOLBDB_NAME

#define CONFOPT_CSPOOLBDB_MODE		@counter@
#define DEFVAL_CSPOOLBDB_MODE		CSPOOLBDB_DBMODE

#define CONFOPT_CSPOOLBDB_DBCACHE_MB	@counter@
#define DEFVAL_CSPOOLBDB_DBCACHE_MB	CSPOOLBDB_DBCACHE_MB

#define CONFOPT_CSPOOLBDB_NDB		@counter@
#define DEFVAL_CSPOOLBDB_NDB		CSPOOLBDB_NDB

#define CONFOPT_CSPOOLBDB_NSLOTS	@counter@
#define DEFVAL_CSPOOLBDB_NSLOTS		CSPOOLBDB_NSLOTS

#define CONFOPT_CSPOOLBDB_MAXSIZE_PER128 @counter@
#define DEFVAL_CSPOOLBDB_MAXSIZE_PER128 CSPOOLBDB_MAXSIZE_PER128

#define CONFOPT_MSPOOLBDB_DBCACHE_MB	@counter@
#define DEFVAL_MSPOOLBDB_DBCACHE_MB	MSPOOLBDB_DBCACHE_MB

#define CONFOPT_MSPOOLBDB_NDB		@counter@
#define DEFVAL_MSPOOLBDB_NDB		MSPOOLBDB_NDB

#define CONFOPT_MSPOOLBDB_NSLOTS	@counter@
#define DEFVAL_MSPOOLBDB_NSLOTS		MSPOOLBDB_NSLOTS

#define CONFOPT_MSPOOLBDB_MAXSIZE_PER128 @counter@
#define DEFVAL_MSPOOLBDB_MAXSIZE_PER128 MSPOOLBDB_MAXSIZE_PER128

#define CONFOPT_MSPOOLBDB_DBSTATS_LOGFILE @counter@
#define DEFVAL_MSPOOLBDB_DBSTATS_LOGFILE MSPOOLBDB_DBSTATS_LOGFILE

#define CONFOPT_MSPOOLBDB_DBSTATS_LOGPERIOD_SECS @counter@
#define DEFVAL_MSPOOLBDB_DBSTATS_LOGPERIOD_SECS \
	MSPOOLBDB_DBSTATS_LOGPERIOD_SECS

#define CONFOPT_MSPOOLBDB_PANICFILE	@counter@
#define DEFVAL_MSPOOLBDB_PANICFILE	MSPOOLBDB_PANICFILE

#define CONFOPT_MSPOOLBDB_PANICFILE_MODE	@counter@
#define DEFVAL_MSPOOLBDB_PANICFILE_MODE		MSPOOLBDB_PANICFILE_MODE

#define CONFOPT_DEVDIR			@counter@
#define DEFVAL_DEVDIR			NBSP_FILTER_DEVDIR

#define CONFOPT_FILTERSERVER_ENABLE	@counter@
#define DEFVAL_FILTERSERVER_ENABLE	FILTERSERVER_ENABLE

#define CONFOPT_SYSFILTERLIST		@counter@
#define DEFVAL_SYSFILTERLIST		NBSP_SYSFILTERLIST

#define CONFOPT_EMWINFILTER		@counter@
#define DEFVAL_EMWINFILTER		NBSP_EMWINFILTER

#define CONFOPT_EMWINFILTER_FIFO	@counter@
#define DEFVAL_EMWINFILTER_FIFO		NBSP_EMWINFILTER_FIFO

#define CONFOPT_EMWINFILTER_READ_TIMEOUT_SECS	@counter@
#define DEFVAL_EMWINFILTER_READ_TIMEOUT_SECS	\
	NBSP_EMWINFILTER_READ_TIMEOUT_SECS

#define CONFOPT_EMWINFILTER_ALWAYS	@counter@
#define DEFVAL_EMWINFILTER_ALWAYS	EMWINFILTER_ALWAYS

#define CONFOPT_NETFILTER_ENABLE	@counter@
#define DEFVAL_NETFILTER_ENABLE		NBSP_NETFILTER_ENABLE

#define CONFOPT_NETFILTER		@counter@
#define DEFVAL_NETFILTER		NBSP_NETFILTER

#define CONFOPT_HTTPD_ENABLE		@counter@
#define DEFVAL_HTTPD_ENABLE		NBSP_HTTPD_ENABLE

#define CONFOPT_HTTPD			@counter@
#define DFEVAL_HTTPPD			NBSP_HTTPD

#define CONFOPT_PIDFILE			@counter@
#define DEFVAL_PIDFILE			NBSP_PIDFILE

#define CONFOPT_PIDFILEMODE		@counter@
#define DEFVAL_PIDFILEMODE		NBSP_PIDFILE_MODE

#define CONFOPT_QSTATEFIFO		@counter@
#define DEFVAL_QSTATEFIFO		NBSP_QSTATEFIFO

#define CONFOPT_QSTATEFIFOMODE		@counter@
#define DEFVAL_QSTATEFIFOMODE		NBSP_QSTATEFIFO_MODE

#define CONFOPT_STATUSFILE		@counter@
#define DEFVAL_STATUSFILE		NBSP_STATUSFILE

#define CONFOPT_MISSINGLOGFILE		@counter@
#define DEFVAL_MISSINGLOGFILE		NBSP_MISSINGLOGFILE

#define CONFOPT_RTXLOGFILE		@counter@
#define DEFVAL_RTXLOGFILE		NBSP_RTXLOGFILE

#define CONFOPT_QSTATELOGFILE		@counter@
#define DEFVAL_QSTATELOGFILE		NBSP_QSTATELOGFILE

#define CONFOPT_QDBSTATSLOGFILE		@counter@
#define DEFVAL_QDBSTATSLOGFILE		NBSP_QDBSTATSLOGFILE

#define CONFOPT_SERVERSTATEFILE		@counter@
#define DEFVAL_SERVERSTATEFILE		NBSP_SERVERSTATE_FILE

#define CONFOPT_SERVERACTIVEFILE	@counter@
#define DEFVAL_SERVERACTIVEFILE		NBSP_SERVERACTIVE_FILE

#define CONFOPT_SERVERTHREADSFILE	@counter@
#define DEFVAL_SERVERTHREADSFILE	NBSP_SERVERTHREADS_FILE;

#define CONFOPT_FILTERSERVER_STATEFILE	@counter@
#define DEFVAL_FILTERSERVER_STATEFILE	NBSP_FILTERSERVER_STATEFILE;

#define CONFOPT_SLAVESTATSFILE		@counter@
#define DEFVAL_SLAVESTATSFILE		NBSP_SLAVESTATSFILE;

#define CONFOPT_PRODUCTMODE		@counter@
#define DEFVAL_PRODUCTMODE		FILE_PRODUCT_MODE

#define CONFOPT_SUBDIRMODE		@counter@	
#define DEFVAL_SUBDIRMODE		SUBDIR_PRODUCT_MODE

#define CONFOPT_SPOOLSAVEFMT		@counter@
#define DEFVAL_SPOOLSAVEFMT		SPOOL_SAVE_FMT

#define CONFOPT_STATS_LOGPERIOD_SECS	@counter@
#define DEFVAL_STATS_LOGPERIOD_SECS	NBSP_STATS_LOGPERIOD_SECS

#define CONFOPT_QSTATE_LOGPERIOD_SECS	@counter@
#define DEFVAL_QSTATE_LOGPERIOD_SECS	QSTATE_LOGPERIOD_SECS

#define CONFOPT_SERVERSTATE_LOGPERIOD_SECS	@counter@
#define DEFVAL_SERVERSTATE_LOGPERIOD_SECS	SERVERSTATE_LOGPERIOD_SECS

#define CONFOPT_SERVERTHREADS_LOGPERIOD_PACKETS	@counter@
#define DEFVAL_SERVERTHREADS_LOGPERIOD_PACKETS	SERVERTHREADS_LOGPERIOD_PACKETS

#define CONFOPT_SERVERTHREADS_LOGPERIOD_SECS	@counter@
#define DEFVAL_SERVERTHREADS_LOGPERIOD_SECS	SERVERTHREADS_LOGPERIOD_SECS

#define CONFOPT_SERVERTYPE		@counter@
#define DEFVAL_SERVERTYPE		SERVER_TYPE

#define CONFOPT_SERVERNAME		@counter@
#define DEFVAL_SERVERNAME		SERVER_NAME

#define CONFOPT_SERVERPORT		@counter@
#define DEFVAL_SERVERPORT		SERVER_PORT

#define CONFOPT_SERVER_MAXCLIENTS	@counter@
#define DEFVAL_SERVER_MAXCLIENTS	SERVER_MAXCLIENTS

#define CONFOPT_SERVER_SO_SNDBUF	@counter@
#define DEFVAL_SERVER_SO_SNDBUF		SERVER_SO_SNDBUF

#define CONFOPT_SERVER_CLIENTID_TIMEOUT_SECS	@counter@
#define DEFVAL_SERVER_CLIENTID_TIMEOUT_SECS	SERVER_CLIENTID_TIMEOUT_SECS

#define CONFOPT_SERVER_CLIENTQLIMIT_LOGPERIOD_SECS @counter@
#define DEFVAL_SERVER_CLIENTQLIMIT_LOGPERIOD_SECS \
	SERVER_CLIENTQLIMIT_LOGPERIOD_SECS

#define CONFOPT_BROADCAST_READ_TIMEOUT_SECS	@counter@
#define DEFVAL_BROADCAST_READ_TIMEOUT_SECS   BROADCAST_READ_TIMEOUT_SECS

#define CONFOPT_FIFO_WRITE_TIMEOUT_MS	@counter@
#define DEFVAL_FIFO_WRITE_TIMEOUT_MS	FIFO_WRITE_TIMEOUT_MS

#define CONFOPT_CLIENT_WRITE_TIMEOUT_MS	@counter@
#define DEFVAL_CLIENT_WRITE_TIMEOUT_MS	CLIENT_WRITE_TIMEOUT_MS

#define CONFOPT_CLIENT_WRITE_TIMEOUT_RETRY	@counter@
#define DEFVAL_CLIENT_WRITE_TIMEOUT_RETRY	CLIENT_WRITE_TIMEOUT_RETRY

#define CONFOPT_CLIENT_RECONNECT_WAIT_SLEEP_SECS	@counter@
#define DEFVAL_CLIENT_RECONNECT_WAIT_SLEEP_SECS	\
	CLIENT_RECONNECT_WAIT_SLEEP_SECS

#define CONFOPT_CLIENT_RECONNECT_WAIT_SLEEP_RETRY	@counter@
#define DEFVAL_CLIENT_RECONNECT_WAIT_SLEEP_RETRY \
	CLIENT_RECONNECT_WAIT_SLEEP_RETRY

#define CONFOPT_CLIENT_OPTIONS		@counter@
#define DEFVAL_CLIENT_OPTIONS		NULL

#define CONFOPT_MEMFILE_BLOCKSIZE	@counter@
#define DEFVAL_MEMFILE_BLOCKSIZE	MEMFILE_BLOCKSIZE

#define CONFOPT_MEMFILE_MINSIZE		@counter@
#define DEFVAL_MEMFILE_MINSIZE		MEMFILE_MINSIZE

#define CONFOPT_DBHOME			@counter@
#define DEFVAL_DBHOME			QUEUE_DBHOME

#define CONFOPT_DBCACHE_MB		@counter@
#define DEFVAL_DBCACHE_MB		QUEUE_DBCACHE_MB

#define CONFOPT_DBEXTENT		@counter@
#define DEFVAL_DBEXTENT			QUEUE_DBEXTENT_SIZE

#define CONFOPT_DBFILEMODE		@counter@
#define DEFVAL_DBFILEMODE		DBFILE_MODE

#define CONFOPT_QDB_DBFNAME		@counter@
#define DEFVAL_QDB_DBFNAME		QDB_DBFNAME

#define CONFOPT_PCTL_DBFNAME		@counter@
#define DEFVAL_PCTL_DBFNAME		PCTL_DBFNAME

#define CONFOPT_PCTLMF_DBFNAME		@counter@
#define DEFVAL_PCTLMF_DBFNAME		PCTLMF_DBFNAME

#define CONFOPT_QUEUE_MAXSIZE_SOFT	@counter@
#define DEFVAL_QUEUE_MAXSIZE_SOFT	QUEUE_MAXSIZE_SOFT		

#define CONFOPT_QUEUE_MAXSIZE_HARD	@counter@
#define DEFVAL_QUEUE_MAXSIZE_HARD	QUEUE_MAXSIZE_HARD

#define CONFOPT_QUEUE_READ_TIMEOUT_MS	@counter@
#define DEFVAL_QUEUE_READ_TIMEOUT_MS	QUEUE_READ_TIMEOUT_MS

#define CONFOPT_QUEUE_QUOTA_LOGPERIOD_SECS	@counter@
#define DEFVAL_QUEUE_QUOTA_LOGPERIOD_SECS	QUEUE_QUOTA_LOGPERIOD_SECS

#define CONFOPT_PCTLMAXSIZE_SOFT	@counter@
#define DEFVAL_PCTLMAXSIZE_SOFT		PCTL_MAXSIZE_SOFT

#define CONFOPT_PCTLMAXSIZE_HARD	@counter@
#define DEFVAL_PCTLMAXSIZE_HARD		PCTL_MAXSIZE_HARD

#define CONFOPT_PCTLMAXMEM_SOFT		@counter@
#define DEFVAL_PCTLMAXMEM_SOFT		PCTL_MAXMEM_SOFT_MB

#define CONFOPT_PCTLMAXMEM_HARD		@counter@
#define DEFVAL_PCTLMAXMEM_HARD		PCTL_MAXMEM_HARD_MB

#define CONFOPT_PCTL_READ_TIMEOUT_MS	@counter@
#define DEFVAL_PCTL_READ_TIMEOUT_MS	PCTL_READ_TIMEOUT_MS

#define CONFOPT_CLIENT_QUEUE_DBCACHE_MB		@counter@
#define DEFVAL_CLIENT_QUEUE_DBCACHE_MB		CLIENT_QUEUE_DBCACHE_MB

#define CONFOPT_CLIENT_QUEUE_MAXSIZE_SOFT	@counter@
#define DEFVAL_CLIENT_QUEUE_MAXSIZE_SOFT	CLIENT_QUEUE_MAXSIZE_SOFT

#define CONFOPT_CLIENT_QUEUE_MAXSIZE_HARD	@counter@
#define DEFVAL_CLIENT_QUEUE_MAXSIZE_HARD	CLIENT_QUEUE_MAXSIZE_HARD

#define CONFOPT_CLIENT_QUEUE_READ_TIMEOUT_MS	@counter@
#define DEFVAL_CLIENT_QUEUE_READ_TIMEOUT_MS	CLIENT_QUEUE_READ_TIMEOUT_MS

#define CONFOPT_NBSP_RTXDB_DBFNAME		@counter@
#define DEFVAL_NBSP_RTXDB_DBFNAME		NBSP_RTXDB_DBFNAME

#define CONFOPT_NBSP_RTXDB_SLOTS		@counter@
#define DEFVAL_NBSP_RTXDB_SLOTS			NBSP_RTXDB_SLOTS

#define CONFOPT_NBSP_RTXDB_TRUNCATE_MINUTES	@counter@
#define DEFVAL_NBSP_RTXDB_TRUNCATE_MINUTES	NBSP_RTXDB_TRUNCATE_MINUTES

#define CONFOPT_NBSP_RTXDB_DEFAULT_PROCESS	@counter@
#define DEFVAL_NBSP_RTXDB_DEFAULT_PROCESS	NBSP_RTXDB_DEFAULT_PROCESS

#define CONFOPT_LOADAVE_MAX_HARD	@counter@
#define DEFVAL_LOADAVE_MAX_HARD		LOADAVE_MAX_HARD

#define CONFOPT_LOADAVE_MAX_SOFT	@counter@
#define DEFVAL_LOADAVE_MAX_SOFT		LOADAVE_MAX_SOFT

#define CONFOPT_LOADAVE_MAX_SLEEP_SECS	@counter@
#define DEFVAL_LOADAVE_MAX_SLEEP_SECS	LOADAVE_MAX_SLEEP_SECS

#define CONFOPT_LOADAVE_CHECKPERIOD_SECS @counter@
#define DEFVAL_LOADAVE_CHECKPERIOD_SECS	LOADAVE_CHECKPERIOD_SECS

#define CONFOPT_LOADAVE_MAX_RTX_INDEX	@counter@
#define DEFVAL_LOADAVE_MAX_RTX_INDEX	LOADAVE_MAX_RTX_INDEX

#define CONFOPT_FEEDMODE		@counter@
#define DEFVAL_FEEDMODE			DEFAULT_FEEDMODE

#define CONFOPT_SLAVE_MASTERSERVERS	@counter@
#define DEFVAL_SLAVE_MASTERSERVERS	SLAVE_MASTERSERVERS

#define CONFOPT_SLAVE_MASTERPORT	@counter@
#define DEFVAL_SLAVE_MASTERPORT		SLAVE_MASTERPORT

#define CONFOPT_SLAVE_READ_TIMEOUT_SECS	@counter@
#define DEFVAL_SLAVE_READ_TIMEOUT_SECS	SLAVE_READ_TIMEOUT_SECS

#define CONFOPT_SLAVE_READ_TIMEOUT_RETRY @counter@
#define DEFVAL_SLAVE_READ_TIMEOUT_RETRY	SLAVE_READ_TIMEOUT_RETRY

#define CONFOPT_SLAVE_REOPEN_TIMEOUT_SECS	@counter@
#define DEFVAL_SLAVE_REOPEN_TIMEOUT_SECS	SLAVE_REOPEN_TIMEOUT_SECS

#define CONFOPT_SLAVE_SO_RCVBUF		@counter@
#define DEFVAL_SLAVE_SO_RCVBUF		SLAVE_SO_RCVBUF

#define CONFOPT_SLAVE_STATS_LOGPERIOD_SECS	@counter@
#define DEFVAL_SLAVE_STATS_LOGPERIOD_SECS	SLAVE_STATS_LOGPERIOD_SECS

#define CONFOPT_SLAVE_REJECT_DUPLICATES		@counter@
#define DEFVAL_SLAVE_REJECT_DUPLICATES		SLAVE_REJECT_DUPLICATES

#define CONFOPT_SLAVE_INFIFO		@counter@
#define DEFVAL_SLAVE_INFIFO		SLAVE_INPUT_FIFO

#define CONFOPT_SLAVE_INFIFOMODE	@counter@
#define DEFVAL_SLAVE_INFIFOMODE		SLAVE_INPUT_FIFO_MODE

#define CONFOPT_SLAVE_INFIFOGRP		@counter@
#define DEFVAL_SLAVE_INFIFOGRP		SLAVE_INPUT_FIFO_GRP

#define CONFOPT_PATTACCEPT		@counter@
#define DEFVAL_PATTACCEPT		PATT_ACCEPT

#define CONFOPT_FILTERQPATTACCEPT	@counter@
#define DEFVAL_FILTERQPATTACCEPT	FILTERQ_PATT_ACCEPT

#define CONFOPT_SERVERQPATTACCEPT	@counter@
#define DEFVAL_SERVERQPATTACCEPT	SERVERQ_PATT_ACCEPT

#define CONFOPT_NBS1PATTACCEPT		@counter@
#define DEFVAL_NBS1PATTACCEPT		NBS1_PATT_ACCEPT

#define CONFOPT_NBS2PATTACCEPT		@counter@
#define DEFVAL_NBS2PATTACCEPT		NBS2_PATT_ACCEPT

#define CONFOPT_EMWINPATTACCEPT		@counter@
#define DEFVAL_EMWINPATTACCEPT		EMWIN_PATT_ACCEPT

#define CONFOPT_SAVEZPATTACCEPT		@counter@
#define DEFVAL_SAVEZPATTACCEPT		SAVEZ_PATT_ACCEPT

#define CONFOPT_RTXDBPATTACCEPT		@counter@
#define DEFVAL_RTXDBPATTACCEPT		RTXDB_PATT_ACCEPT

static struct confoption_st confoptions[] = {
  {"user", CONFOPT_USER, TCL_LINK_STRING, NULL, 0},
  {"group", CONFOPT_GROUP, TCL_LINK_STRING, NULL, 0},
  {"home", CONFOPT_HOME, TCL_LINK_STRING, NULL, 0},
  {"umask", CONFOPT_UMASK, TCL_LINK_INT, NULL, DEFVAL_UMASK},
  {"multicastip", CONFOPT_MULTICASTIP, TCL_LINK_STRING, NULL, 0},
  {"multicastport", CONFOPT_MULTICASTPORT, TCL_LINK_STRING, NULL, 0},
  {"ifname", CONFOPT_MULTICASTIFNAME, TCL_LINK_STRING, NULL, 0},
  {"ifip", CONFOPT_MULTICASTIFIP, TCL_LINK_STRING, NULL, 0},
  {"udprcvsize", CONFOPT_UDPRCVSIZE, TCL_LINK_INT, NULL, DEFVAL_UDPRCVSIZE},
  {"startscript", CONFOPT_STARTSCRIPT, TCL_LINK_STRING, NULL, 0},
  {"stopscript", CONFOPT_STOPSCRIPT, TCL_LINK_STRING, NULL, 0},
  {"scheduler", CONFOPT_SCHEDULER, TCL_LINK_STRING, NULL, 0},
  {"spooltype", CONFOPT_SPOOLTYPE, TCL_LINK_INT, NULL,
	DEFVAL_SPOOLTYPE},
  {"spooldir", CONFOPT_SPOOLDIR, TCL_LINK_STRING, NULL, 0},
  {"spooldb_slots", CONFOPT_SPOOLDB_SLOTS, TCL_LINK_INT, NULL,
	DEFVAL_SPOOLDB_SLOTS},
  {"spooldb_fname", CONFOPT_SPOOLDB_FNAME, TCL_LINK_STRING, NULL, 0},
  {"cspoolbdb_dir", CONFOPT_CSPOOLBDB_DIR, TCL_LINK_STRING, NULL, 0},
  {"cspoolbdb_name", CONFOPT_CSPOOLBDB_NAME, TCL_LINK_STRING, NULL, 0},
   {"cspoolbdb_mode", CONFOPT_CSPOOLBDB_MODE, TCL_LINK_INT, NULL,
	DEFVAL_CSPOOLBDB_MODE},
  {"cspoolbdb_dbcache_mb", CONFOPT_CSPOOLBDB_DBCACHE_MB, TCL_LINK_INT, NULL,
	DEFVAL_CSPOOLBDB_DBCACHE_MB},
  {"cspoolbdb_ndb", CONFOPT_CSPOOLBDB_NDB, TCL_LINK_INT, NULL,
	DEFVAL_CSPOOLBDB_NDB},
  {"cspoolbdb_nslots", CONFOPT_CSPOOLBDB_NSLOTS, TCL_LINK_INT, NULL,
	DEFVAL_CSPOOLBDB_NSLOTS},
  {"cspoolbdb_maxsize_per128", CONFOPT_CSPOOLBDB_MAXSIZE_PER128,
	TCL_LINK_INT, NULL, DEFVAL_CSPOOLBDB_MAXSIZE_PER128},
  {"mspoolbdb_dbcache_mb", CONFOPT_MSPOOLBDB_DBCACHE_MB, TCL_LINK_INT, NULL,
	DEFVAL_MSPOOLBDB_DBCACHE_MB},
  {"mspoolbdb_ndb", CONFOPT_MSPOOLBDB_NDB, TCL_LINK_INT, NULL,
	DEFVAL_MSPOOLBDB_NDB},
  {"mspoolbdb_nslots", CONFOPT_MSPOOLBDB_NSLOTS, TCL_LINK_INT, NULL,
	DEFVAL_MSPOOLBDB_NSLOTS},
  {"mspoolbdb_maxsize_per128", CONFOPT_MSPOOLBDB_MAXSIZE_PER128,
	TCL_LINK_INT, NULL, DEFVAL_MSPOOLBDB_MAXSIZE_PER128},
  {"mspoolbdb_dbstats_logfile", CONFOPT_MSPOOLBDB_DBSTATS_LOGFILE,
	TCL_LINK_STRING, NULL, 0},
  {"mspoolbdb_dbstats_logperiod_secs",
	CONFOPT_MSPOOLBDB_DBSTATS_LOGPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_MSPOOLBDB_DBSTATS_LOGPERIOD_SECS},
  {"mspoolbdb_panicfile", CONFOPT_MSPOOLBDB_PANICFILE,
	TCL_LINK_STRING, NULL, 0},
  {"mspoolbdb_panicfile_mode", CONFOPT_MSPOOLBDB_PANICFILE_MODE, TCL_LINK_INT,
  	NULL, DEFVAL_MSPOOLBDB_PANICFILE_MODE},
  {"devdir", CONFOPT_DEVDIR, TCL_LINK_STRING, NULL, 0},
  {"filterserver_enable", CONFOPT_FILTERSERVER_ENABLE, TCL_LINK_INT, NULL,
	DEFVAL_FILTERSERVER_ENABLE},
  {"filterlist", CONFOPT_SYSFILTERLIST, TCL_LINK_STRING, NULL, 0},
  {"emwinfilter", CONFOPT_EMWINFILTER, TCL_LINK_STRING, NULL, 0},
  {"emwinfilter_fifo", CONFOPT_EMWINFILTER_FIFO, TCL_LINK_STRING, NULL, 0},
  {"emwinfilter_read_timeout_secs", CONFOPT_EMWINFILTER_READ_TIMEOUT_SECS,
	TCL_LINK_INT, NULL, DEFVAL_EMWINFILTER_READ_TIMEOUT_SECS},
  {"emwinfilter_always", CONFOPT_EMWINFILTER_ALWAYS, TCL_LINK_INT, NULL,
	DEFVAL_EMWINFILTER_ALWAYS},
  {"netfilter_enable", CONFOPT_NETFILTER_ENABLE, TCL_LINK_INT, NULL,
	DEFVAL_NETFILTER_ENABLE},
  {"netfilter", CONFOPT_NETFILTER, TCL_LINK_STRING, NULL, 0},
  {"httpd_enable", CONFOPT_HTTPD_ENABLE, TCL_LINK_INT, NULL,
	DEFVAL_HTTPD_ENABLE},
  {"httpd", CONFOPT_HTTPD, TCL_LINK_STRING, NULL, 0},
  {"pidfile", CONFOPT_PIDFILE, TCL_LINK_STRING, NULL, 0},
  {"pidfilemode", CONFOPT_PIDFILEMODE, TCL_LINK_INT, NULL,
	DEFVAL_PIDFILEMODE},
  {"qstatefifo", CONFOPT_QSTATEFIFO, TCL_LINK_STRING, NULL, 0},
  {"qstatefifomode", CONFOPT_QSTATEFIFOMODE, TCL_LINK_INT, NULL,
	DEFVAL_QSTATEFIFOMODE},
  {"statusfile", CONFOPT_STATUSFILE, TCL_LINK_STRING, NULL, 0},
  {"missinglogfile", CONFOPT_MISSINGLOGFILE, TCL_LINK_STRING, NULL, 0},
  {"rtxlogfile", CONFOPT_RTXLOGFILE, TCL_LINK_STRING, NULL, 0},
  {"qstatelogfile", CONFOPT_QSTATELOGFILE, TCL_LINK_STRING, NULL, 0},
  {"qdbstatslogfile", CONFOPT_QDBSTATSLOGFILE, TCL_LINK_STRING, NULL, 0},
  {"serverstatefile", CONFOPT_SERVERSTATEFILE, TCL_LINK_STRING, NULL, 0},
  {"serveractivefile", CONFOPT_SERVERACTIVEFILE, TCL_LINK_STRING, NULL, 0},
  {"serverthreadsfile", CONFOPT_SERVERTHREADSFILE, TCL_LINK_STRING, NULL, 0},
  {"filterserver_statefile", CONFOPT_FILTERSERVER_STATEFILE, TCL_LINK_STRING,
	NULL, 0},
  {"slavestatsfile", CONFOPT_SLAVESTATSFILE, TCL_LINK_STRING, NULL, 0},
  {"productmode", CONFOPT_PRODUCTMODE, TCL_LINK_INT, NULL, DEFVAL_PRODUCTMODE},
  {"subdirmode", CONFOPT_SUBDIRMODE, TCL_LINK_INT, NULL, DEFVAL_SUBDIRMODE},
  {"spoolsavefmt", CONFOPT_SPOOLSAVEFMT, TCL_LINK_INT, NULL,
	DEFVAL_SPOOLSAVEFMT},
  {"nbspstats_logperiod_secs", CONFOPT_STATS_LOGPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_STATS_LOGPERIOD_SECS},
  {"qstate_logperiod_secs", CONFOPT_QSTATE_LOGPERIOD_SECS, TCL_LINK_INT, NULL,
	DEFVAL_QSTATE_LOGPERIOD_SECS},
  {"serverstate_logperiod_secs", CONFOPT_SERVERSTATE_LOGPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_SERVERSTATE_LOGPERIOD_SECS},
  {"serverthreads_logperiod_packets", CONFOPT_SERVERTHREADS_LOGPERIOD_PACKETS,
	TCL_LINK_INT, NULL, DEFVAL_SERVERTHREADS_LOGPERIOD_PACKETS},
  {"serverthreads_logperiod_secs", CONFOPT_SERVERTHREADS_LOGPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_SERVERTHREADS_LOGPERIOD_SECS},
  {"servertype", CONFOPT_SERVERTYPE, TCL_LINK_INT, NULL, DEFVAL_SERVERTYPE},
  {"servername", CONFOPT_SERVERNAME, TCL_LINK_STRING, NULL, 0},
  {"serverport", CONFOPT_SERVERPORT, TCL_LINK_STRING, NULL, 0},
  {"server_maxclients", CONFOPT_SERVER_MAXCLIENTS, TCL_LINK_INT, NULL,
	DEFVAL_SERVER_MAXCLIENTS},
  {"server_so_sndbuf", CONFOPT_SERVER_SO_SNDBUF, TCL_LINK_INT, NULL,
	DEFVAL_SERVER_SO_SNDBUF},
  {"server_clientid_timeout_secs", CONFOPT_SERVER_CLIENTID_TIMEOUT_SECS,
	TCL_LINK_INT, NULL, DEFVAL_SERVER_CLIENTID_TIMEOUT_SECS},
  {"server_clientqlimit_logperiod_secs",
        CONFOPT_SERVER_CLIENTQLIMIT_LOGPERIOD_SECS, TCL_LINK_INT, NULL,
	DEFVAL_SERVER_CLIENTQLIMIT_LOGPERIOD_SECS},
  {"broadcast_read_timeout_secs", CONFOPT_BROADCAST_READ_TIMEOUT_SECS,
	TCL_LINK_INT, NULL, DEFVAL_BROADCAST_READ_TIMEOUT_SECS},
  {"fifo_write_timeout_ms", CONFOPT_FIFO_WRITE_TIMEOUT_MS, TCL_LINK_INT, NULL,
	DEFVAL_FIFO_WRITE_TIMEOUT_MS},
  {"client_write_timeout_ms", CONFOPT_CLIENT_WRITE_TIMEOUT_MS,
	TCL_LINK_INT, NULL, DEFVAL_CLIENT_WRITE_TIMEOUT_MS},
  {"client_write_timeout_retry", CONFOPT_CLIENT_WRITE_TIMEOUT_RETRY,
	TCL_LINK_INT, NULL, DEFVAL_CLIENT_WRITE_TIMEOUT_RETRY},
  {"client_reconnect_wait_sleep_secs",
	CONFOPT_CLIENT_RECONNECT_WAIT_SLEEP_SECS,
	TCL_LINK_INT, NULL, DEFVAL_CLIENT_RECONNECT_WAIT_SLEEP_SECS},
  {"client_reconnect_wait_sleep_retry",
	CONFOPT_CLIENT_RECONNECT_WAIT_SLEEP_RETRY,
	TCL_LINK_INT, NULL, DEFVAL_CLIENT_RECONNECT_WAIT_SLEEP_RETRY},
  {"clientoptions", CONFOPT_CLIENT_OPTIONS, TCL_LINK_STRING, NULL, 0},
  {"memfileblocksize", CONFOPT_MEMFILE_BLOCKSIZE, TCL_LINK_INT, NULL,
	DEFVAL_MEMFILE_BLOCKSIZE},
  {"memfileminsize", CONFOPT_MEMFILE_MINSIZE, TCL_LINK_INT, NULL,
	DEFVAL_MEMFILE_MINSIZE},
  {"dbhome", CONFOPT_DBHOME, TCL_LINK_STRING, NULL, 0},
  {"dbcachemb", CONFOPT_DBCACHE_MB, TCL_LINK_INT, NULL, DEFVAL_DBCACHE_MB},
  {"dbextent", CONFOPT_DBEXTENT, TCL_LINK_INT, NULL, DEFVAL_DBEXTENT},
  {"dbfilemode", CONFOPT_DBFILEMODE, TCL_LINK_INT, NULL, DEFVAL_DBFILEMODE},
  {"qdbfname", CONFOPT_QDB_DBFNAME, TCL_LINK_STRING, NULL, 0},
  {"pctldbfname", CONFOPT_PCTL_DBFNAME, TCL_LINK_STRING, NULL, 0},
  {"pctlmfdbfname", CONFOPT_PCTLMF_DBFNAME, TCL_LINK_STRING, NULL, 0},
  {"queuemaxsoft", CONFOPT_QUEUE_MAXSIZE_SOFT, TCL_LINK_INT, NULL,
	DEFVAL_QUEUE_MAXSIZE_SOFT},
  {"queuemaxhard", CONFOPT_QUEUE_MAXSIZE_HARD, TCL_LINK_INT, NULL,
	DEFVAL_QUEUE_MAXSIZE_HARD},
  {"queue_read_timeout_ms", CONFOPT_QUEUE_READ_TIMEOUT_MS,
	TCL_LINK_INT, NULL, DEFVAL_QUEUE_READ_TIMEOUT_MS},
  {"queue_quota_logperiod_secs", CONFOPT_QUEUE_QUOTA_LOGPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_QUEUE_QUOTA_LOGPERIOD_SECS},
  {"pctlmaxsoft", CONFOPT_PCTLMAXSIZE_SOFT, TCL_LINK_INT, NULL,
	DEFVAL_PCTLMAXSIZE_SOFT},
  {"pctlmaxhard", CONFOPT_PCTLMAXSIZE_HARD, TCL_LINK_INT, NULL,
	DEFVAL_PCTLMAXSIZE_HARD},
  {"pctlmaxmemsoft", CONFOPT_PCTLMAXMEM_SOFT, TCL_LINK_INT, NULL,
	DEFVAL_PCTLMAXMEM_SOFT},
  {"pctlmaxmemhard", CONFOPT_PCTLMAXMEM_HARD, TCL_LINK_INT, NULL,
	DEFVAL_PCTLMAXMEM_HARD},
  {"pctl_read_timeout_ms", CONFOPT_PCTL_READ_TIMEOUT_MS,
	TCL_LINK_INT, NULL, DEFVAL_PCTL_READ_TIMEOUT_MS},
  {"clientqueuedbcachemb", CONFOPT_CLIENT_QUEUE_DBCACHE_MB, TCL_LINK_INT, NULL,
	DEFVAL_CLIENT_QUEUE_DBCACHE_MB},
  {"clientqueuemaxsoft", CONFOPT_CLIENT_QUEUE_MAXSIZE_SOFT, TCL_LINK_INT, NULL,
	DEFVAL_CLIENT_QUEUE_MAXSIZE_SOFT},
  {"clientqueuemaxhard", CONFOPT_CLIENT_QUEUE_MAXSIZE_HARD, TCL_LINK_INT, NULL,
	DEFVAL_CLIENT_QUEUE_MAXSIZE_HARD},
  {"client_queue_read_timeout_ms", CONFOPT_CLIENT_QUEUE_READ_TIMEOUT_MS,
	TCL_LINK_INT, NULL, DEFVAL_CLIENT_QUEUE_READ_TIMEOUT_MS},
  {"rtxdb_dbfname", CONFOPT_NBSP_RTXDB_DBFNAME, TCL_LINK_STRING, NULL, 0},
  {"rtxdb_slots", CONFOPT_NBSP_RTXDB_SLOTS, TCL_LINK_INT, NULL,
	DEFVAL_NBSP_RTXDB_SLOTS},
  {"rtxdb_truncate_minutes", CONFOPT_NBSP_RTXDB_TRUNCATE_MINUTES,
	TCL_LINK_INT, NULL, DEFVAL_NBSP_RTXDB_TRUNCATE_MINUTES},
  {"rtxdb_default_process", CONFOPT_NBSP_RTXDB_DEFAULT_PROCESS,
	TCL_LINK_INT, NULL, DEFVAL_NBSP_RTXDB_DEFAULT_PROCESS},
  {"loadave_max_hard", CONFOPT_LOADAVE_MAX_HARD, TCL_LINK_INT, NULL,
	DEFVAL_LOADAVE_MAX_HARD},
  {"loadave_max_soft", CONFOPT_LOADAVE_MAX_SOFT, TCL_LINK_INT, NULL,
	DEFVAL_LOADAVE_MAX_SOFT},
  {"loadave_max_sleep_secs", CONFOPT_LOADAVE_MAX_SLEEP_SECS,
	TCL_LINK_INT, NULL, DEFVAL_LOADAVE_MAX_SLEEP_SECS},
  {"loadave_checkperiod_secs", CONFOPT_LOADAVE_CHECKPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_LOADAVE_CHECKPERIOD_SECS},
  {"loadave_max_rtx_index", CONFOPT_LOADAVE_MAX_RTX_INDEX, TCL_LINK_INT, NULL,
	DEFVAL_LOADAVE_MAX_RTX_INDEX},
  {"feedmode", CONFOPT_FEEDMODE, TCL_LINK_INT, NULL, DEFVAL_FEEDMODE},
  {"masterservers", CONFOPT_SLAVE_MASTERSERVERS, TCL_LINK_STRING, NULL, 0},
  {"slave_masterport", CONFOPT_SLAVE_MASTERPORT, TCL_LINK_STRING, NULL, 0},
  {"slave_read_timeout_secs", CONFOPT_SLAVE_READ_TIMEOUT_SECS,
	TCL_LINK_INT, NULL, DEFVAL_SLAVE_READ_TIMEOUT_SECS},
  {"slave_read_timeout_retry", CONFOPT_SLAVE_READ_TIMEOUT_RETRY, TCL_LINK_INT,
	NULL, DEFVAL_SLAVE_READ_TIMEOUT_RETRY},
  {"slave_reopen_timeout_secs", CONFOPT_SLAVE_REOPEN_TIMEOUT_SECS,
	TCL_LINK_INT, NULL, DEFVAL_SLAVE_REOPEN_TIMEOUT_SECS},
  {"slave_so_rcvbuf", CONFOPT_SLAVE_SO_RCVBUF, TCL_LINK_INT, NULL,
	DEFVAL_SLAVE_SO_RCVBUF},
  {"slave_stats_logperiod_secs", CONFOPT_SLAVE_STATS_LOGPERIOD_SECS,
	TCL_LINK_INT, NULL, DEFVAL_SLAVE_STATS_LOGPERIOD_SECS},
  {"slave_reject_duplicates", CONFOPT_SLAVE_REJECT_DUPLICATES,
	TCL_LINK_INT, NULL, DEFVAL_SLAVE_REJECT_DUPLICATES},
  {"infeedfifo", CONFOPT_SLAVE_INFIFO, TCL_LINK_STRING, NULL, 0},
  {"infeedfifomode", CONFOPT_SLAVE_INFIFOMODE, TCL_LINK_INT, NULL,
	DEFVAL_SLAVE_INFIFOMODE},
  {"infeedfifogrp", CONFOPT_SLAVE_INFIFOGRP, TCL_LINK_STRING, NULL, 0},
  {"acceptpatt", CONFOPT_PATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"filterqacceptpatt", CONFOPT_FILTERQPATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"serverqacceptpatt", CONFOPT_SERVERQPATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"nbs1acceptpatt", CONFOPT_NBS1PATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"nbs2acceptpatt", CONFOPT_NBS2PATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"emwinacceptpatt", CONFOPT_EMWINPATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"savezacceptpatt", CONFOPT_SAVEZPATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {"rtxdbacceptpatt", CONFOPT_RTXDBPATTACCEPT, TCL_LINK_STRING, NULL, 0},
  {NULL, 0, 0, NULL, 0}
};  

static void fprintf_str(FILE *f, char *fmt,
			char *name, char *value);

int configure(void){

  int status = 0;

  if(g.configfile != NULL)
    status = parse_configfile(g.configfile, confoptions);
  else
    status = parse_configfile2(g.defconfigfile, confoptions);

  if(status != 0)
    return(status);

  setoptval(&g.user, confoptions, CONFOPT_USER);
  setoptval(&g.group, confoptions, CONFOPT_GROUP);
  setoptval(&g.home, confoptions, CONFOPT_HOME);
  setoptval(&g.umask, confoptions, CONFOPT_UMASK);
  setoptval(&g.multicastip, confoptions, CONFOPT_MULTICASTIP);
  setoptval(&g.multicastport, confoptions, CONFOPT_MULTICASTPORT);
  setoptval(&g.ifname, confoptions, CONFOPT_MULTICASTIFNAME);
  setoptval(&g.ifip, confoptions, CONFOPT_MULTICASTIFIP);
  setoptval(&g.udprcvsize, confoptions, CONFOPT_UDPRCVSIZE);
  setoptval(&g.startscript, confoptions, CONFOPT_STARTSCRIPT);
  setoptval(&g.stopscript, confoptions, CONFOPT_STOPSCRIPT);
  setoptval(&g.scheduler, confoptions, CONFOPT_SCHEDULER);
  setoptval(&g.spooltype, confoptions, CONFOPT_SPOOLTYPE);
  setoptval(&g.spooldir, confoptions, CONFOPT_SPOOLDIR);
  setoptval(&g.spooldb_slots, confoptions, CONFOPT_SPOOLDB_SLOTS);
  setoptval(&g.spooldb_fname, confoptions, CONFOPT_SPOOLDB_FNAME);
  setoptval(&g.cspoolbdb_dir, confoptions, CONFOPT_CSPOOLBDB_DIR);
  setoptval(&g.cspoolbdb_name, confoptions, CONFOPT_CSPOOLBDB_NAME);
  setoptval(&g.cspoolbdb_mode, confoptions, CONFOPT_CSPOOLBDB_MODE);
  setoptval(&g.cspoolbdb_dbcache_mb, confoptions,
	CONFOPT_CSPOOLBDB_DBCACHE_MB);
  setoptval(&g.cspoolbdb_ndb, confoptions, CONFOPT_CSPOOLBDB_NDB);
  setoptval(&g.cspoolbdb_nslots, confoptions, CONFOPT_CSPOOLBDB_NSLOTS);
  setoptval(&g.cspoolbdb_maxsize_per128, confoptions,
	CONFOPT_CSPOOLBDB_MAXSIZE_PER128);
  setoptval(&g.mspoolbdb_dbcache_mb, confoptions,
	CONFOPT_MSPOOLBDB_DBCACHE_MB);
  setoptval(&g.mspoolbdb_ndb, confoptions, CONFOPT_MSPOOLBDB_NDB);
  setoptval(&g.mspoolbdb_nslots, confoptions, CONFOPT_MSPOOLBDB_NSLOTS);
  setoptval(&g.mspoolbdb_maxsize_per128, confoptions,
	CONFOPT_MSPOOLBDB_MAXSIZE_PER128);
  setoptval(&g.mspoolbdb_dbstats_logfile, confoptions,
	CONFOPT_MSPOOLBDB_DBSTATS_LOGFILE);
  setoptval(&g.mspoolbdb_dbstats_logperiod_secs, confoptions,
	CONFOPT_MSPOOLBDB_DBSTATS_LOGPERIOD_SECS);
  setoptval(&g.mspoolbdb_panicfile, confoptions, CONFOPT_MSPOOLBDB_PANICFILE);
  setoptval(&g.mspoolbdb_panicfile_mode, confoptions,
  	CONFOPT_MSPOOLBDB_PANICFILE_MODE);
  setoptval(&g.filterdevdir, confoptions, CONFOPT_DEVDIR);
  setoptval(&g.filterserver_enable, confoptions, CONFOPT_FILTERSERVER_ENABLE);
  setoptval(&g.sysfilterlist, confoptions, CONFOPT_SYSFILTERLIST);
  setoptval(&g.emwinfilter, confoptions, CONFOPT_EMWINFILTER);
  setoptval(&g.emwinfilter_fifo, confoptions, CONFOPT_EMWINFILTER_FIFO);
  setoptval(&g.emwinfilter_read_timeout_secs, confoptions,
	CONFOPT_EMWINFILTER_READ_TIMEOUT_SECS);
  setoptval(&g.emwinfilter_always, confoptions, CONFOPT_EMWINFILTER_ALWAYS);
  setoptval(&g.netfilter_enable, confoptions, CONFOPT_NETFILTER_ENABLE);
  setoptval(&g.netfilter, confoptions, CONFOPT_NETFILTER);
  setoptval(&g.httpd_enable, confoptions, CONFOPT_HTTPD_ENABLE);
  setoptval(&g.httpd, confoptions, CONFOPT_HTTPD);
  setoptval(&g.pidfile, confoptions, CONFOPT_PIDFILE);
  setoptval(&g.pidfile_mode, confoptions, CONFOPT_PIDFILEMODE);
  setoptval(&g.qstatefifo, confoptions, CONFOPT_QSTATEFIFO);
  setoptval(&g.qstatefifo_mode, confoptions, CONFOPT_QSTATEFIFOMODE);
  setoptval(&g.statusfile, confoptions, CONFOPT_STATUSFILE);
  setoptval(&g.missinglogfile, confoptions, CONFOPT_MISSINGLOGFILE);
  setoptval(&g.rtxlogfile, confoptions, CONFOPT_RTXLOGFILE);
  setoptval(&g.qstatelogfile, confoptions, CONFOPT_QSTATELOGFILE);
  setoptval(&g.qdbstatslogfile, confoptions, CONFOPT_QDBSTATSLOGFILE);
  setoptval(&g.serverstatefile, confoptions, CONFOPT_SERVERSTATEFILE);
  setoptval(&g.serveractivefile, confoptions, CONFOPT_SERVERACTIVEFILE);
  setoptval(&g.serverthreadsfile, confoptions, CONFOPT_SERVERTHREADSFILE);
  setoptval(&g.filterserver_statefile, confoptions,
	CONFOPT_FILTERSERVER_STATEFILE);
  setoptval(&g.slavestatsfile, confoptions, CONFOPT_SLAVESTATSFILE);
  setoptval(&g.product_mode, confoptions, CONFOPT_PRODUCTMODE);
  setoptval(&g.subdir_product_mode, confoptions, CONFOPT_SUBDIRMODE);
  setoptval(&g.spoolsavefmt, confoptions, CONFOPT_SPOOLSAVEFMT);
  setoptval(&g.nbspstats_logperiod_secs, confoptions,
	CONFOPT_STATS_LOGPERIOD_SECS);
  setoptval(&g.qstate_logperiod_secs, confoptions,
	CONFOPT_QSTATE_LOGPERIOD_SECS);
  setoptval(&g.serverstate_logperiod_secs, confoptions,
	CONFOPT_SERVERSTATE_LOGPERIOD_SECS);
  setoptval(&g.serverthreads_logperiod_packets, confoptions,
	CONFOPT_SERVERTHREADS_LOGPERIOD_PACKETS);
  setoptval(&g.serverthreads_logperiod_secs, confoptions,
	CONFOPT_SERVERTHREADS_LOGPERIOD_SECS);
  setoptval(&g.servertype, confoptions, CONFOPT_SERVERTYPE);
  setoptval(&g.servername, confoptions, CONFOPT_SERVERNAME);
  setoptval(&g.serverport, confoptions, CONFOPT_SERVERPORT);
  setoptval(&g.server_maxclients, confoptions, CONFOPT_SERVER_MAXCLIENTS);
  setoptval(&g.server_so_sndbuf, confoptions, CONFOPT_SERVER_SO_SNDBUF);
  setoptval(&g.server_clientid_timeout_secs, confoptions,
	CONFOPT_SERVER_CLIENTID_TIMEOUT_SECS);
  setoptval(&g.server_clientqlimit_logperiod_secs, confoptions,  
        CONFOPT_SERVER_CLIENTQLIMIT_LOGPERIOD_SECS);
  setoptval(&g.broadcast_read_timeout_secs, confoptions,
	CONFOPT_BROADCAST_READ_TIMEOUT_SECS);
  setoptval(&g.fifo_write_timeout_ms, confoptions,
	CONFOPT_FIFO_WRITE_TIMEOUT_MS);
  setoptval(&g.client_write_timeout_ms, confoptions,
	CONFOPT_CLIENT_WRITE_TIMEOUT_MS);
  setoptval(&g.client_write_timeout_retry, confoptions,
	CONFOPT_CLIENT_WRITE_TIMEOUT_RETRY);
  setoptval(&g.client_reconnect_wait_sleep_secs, confoptions,
	CONFOPT_CLIENT_RECONNECT_WAIT_SLEEP_SECS);
  setoptval(&g.client_reconnect_wait_sleep_retry, confoptions,
	CONFOPT_CLIENT_RECONNECT_WAIT_SLEEP_RETRY);
  setoptval(&g.clientoptions, confoptions, CONFOPT_CLIENT_OPTIONS);

  setoptval(&g.memfile_blocksize, confoptions, CONFOPT_MEMFILE_BLOCKSIZE);
  setoptval(&g.memfile_minsize, confoptions, CONFOPT_MEMFILE_MINSIZE);

  setoptval(&g.dbhome, confoptions, CONFOPT_DBHOME);
  setoptval(&g.dbcache_mb, confoptions, CONFOPT_DBCACHE_MB);
  setoptval(&g.dbextent_size, confoptions, CONFOPT_DBEXTENT);
  setoptval(&g.dbfile_mode, confoptions, CONFOPT_DBFILEMODE);
  setoptval(&g.qdb_dbfname, confoptions, CONFOPT_QDB_DBFNAME);
  setoptval(&g.pctl_dbfname, confoptions, CONFOPT_PCTL_DBFNAME);
  setoptval(&g.pctlmf_dbfname, confoptions, CONFOPT_PCTLMF_DBFNAME);

  setoptval(&g.queue_maxsize_soft, confoptions, CONFOPT_QUEUE_MAXSIZE_SOFT);
  setoptval(&g.queue_maxsize_hard, confoptions, CONFOPT_QUEUE_MAXSIZE_HARD);
  setoptval(&g.queue_read_timeout_ms, confoptions,
	CONFOPT_QUEUE_READ_TIMEOUT_MS);
  setoptval(&g.queue_quota_logperiod_secs, confoptions,
	CONFOPT_QUEUE_QUOTA_LOGPERIOD_SECS);

  setoptval(&g.pctl_maxsize_soft, confoptions, CONFOPT_PCTLMAXSIZE_SOFT);
  setoptval(&g.pctl_maxsize_hard, confoptions, CONFOPT_PCTLMAXSIZE_HARD);
  setoptval(&g.pctl_maxmem_soft, confoptions, CONFOPT_PCTLMAXMEM_SOFT);
  setoptval(&g.pctl_maxmem_hard, confoptions, CONFOPT_PCTLMAXMEM_HARD);
  setoptval(&g.pctl_read_timeout_ms, confoptions,
	CONFOPT_PCTL_READ_TIMEOUT_MS);

  setoptval(&g.client_queue_dbcache_mb, confoptions,
	CONFOPT_CLIENT_QUEUE_DBCACHE_MB);
  setoptval(&g.client_queue_maxsize_soft, confoptions,
	CONFOPT_CLIENT_QUEUE_MAXSIZE_SOFT);
  setoptval(&g.client_queue_maxsize_hard, confoptions,
	CONFOPT_CLIENT_QUEUE_MAXSIZE_HARD);
  setoptval(&g.client_queue_read_timeout_ms, confoptions,
	CONFOPT_CLIENT_QUEUE_READ_TIMEOUT_MS);

  setoptval(&g.rtxdb_dbfname, confoptions, CONFOPT_NBSP_RTXDB_DBFNAME);
  setoptval(&g.rtxdb_slots, confoptions, CONFOPT_NBSP_RTXDB_SLOTS);
  setoptval(&g.rtxdb_truncate_minutes, confoptions,
	CONFOPT_NBSP_RTXDB_TRUNCATE_MINUTES);
  setoptval(&g.rtxdb_default_process, confoptions,
	CONFOPT_NBSP_RTXDB_DEFAULT_PROCESS);

  setoptval(&g.loadave_max_hard, confoptions, CONFOPT_LOADAVE_MAX_HARD);
  setoptval(&g.loadave_max_soft, confoptions, CONFOPT_LOADAVE_MAX_SOFT);
  setoptval(&g.loadave_max_sleep_secs, confoptions,
	CONFOPT_LOADAVE_MAX_SLEEP_SECS);
  setoptval(&g.loadave_checkperiod_secs, confoptions,
	CONFOPT_LOADAVE_CHECKPERIOD_SECS);
  setoptval(&g.loadave_max_rtx_index, confoptions,
	CONFOPT_LOADAVE_MAX_RTX_INDEX);

  setoptval(&g.feedmode, confoptions, CONFOPT_FEEDMODE);
  setoptval(&g.masterservers, confoptions, CONFOPT_SLAVE_MASTERSERVERS);
  setoptval(&g.slave_masterport, confoptions, CONFOPT_SLAVE_MASTERPORT);
  setoptval(&g.slave_read_timeout_secs, confoptions,
	CONFOPT_SLAVE_READ_TIMEOUT_SECS);
  setoptval(&g.slave_read_timeout_retry, confoptions,
	CONFOPT_SLAVE_READ_TIMEOUT_RETRY);
  setoptval(&g.slave_reopen_timeout_secs, confoptions,
	CONFOPT_SLAVE_REOPEN_TIMEOUT_SECS);
  setoptval(&g.slave_so_rcvbuf, confoptions, CONFOPT_SLAVE_SO_RCVBUF);
  setoptval(&g.slave_stats_logperiod_secs, confoptions,
	CONFOPT_SLAVE_STATS_LOGPERIOD_SECS);
  setoptval(&g.slave_reject_duplicates, confoptions,
	CONFOPT_SLAVE_REJECT_DUPLICATES);

  setoptval(&g.infifo, confoptions, CONFOPT_SLAVE_INFIFO);
  setoptval(&g.infifo_mode, confoptions, CONFOPT_SLAVE_INFIFOMODE);
  setoptval(&g.infifo_grp, confoptions, CONFOPT_SLAVE_INFIFOGRP);

  setoptval(&g.patt_accept, confoptions, CONFOPT_PATTACCEPT);
  setoptval(&g.filterq_patt_accept, confoptions, CONFOPT_FILTERQPATTACCEPT);
  setoptval(&g.serverq_patt_accept, confoptions, CONFOPT_SERVERQPATTACCEPT);
  setoptval(&g.nbs1_patt_accept, confoptions, CONFOPT_NBS1PATTACCEPT);
  setoptval(&g.nbs2_patt_accept, confoptions, CONFOPT_NBS2PATTACCEPT);
  setoptval(&g.emwin_patt_accept, confoptions, CONFOPT_EMWINPATTACCEPT);
  setoptval(&g.savez_patt_accept, confoptions, CONFOPT_SAVEZPATTACCEPT);
  setoptval(&g.rtxdb_patt_accept, confoptions, CONFOPT_RTXDBPATTACCEPT);

  return(status);
}

void release_confoptions(void){
  
  kill_confopt_table(confoptions);
}

void print_confoptions(void){

  char *fmt = "%s %s\n";

  fprintf_str(stdout, fmt, "user", g.user);
  fprintf_str(stdout, fmt, "group", g.group);
  fprintf_str(stdout, fmt, "home", g.home);
  fprintf(stdout, "umask %o\n", g.umask);
  fprintf_str(stdout, fmt, "multicastip", g.multicastip);
  fprintf_str(stdout, fmt, "multicastport", g.multicastport);
  fprintf_str(stdout, fmt, "ifname", g.ifname);
  fprintf_str(stdout, fmt, "ifip", g.ifip);
  fprintf(stdout, "udprcvsize %d\n", g.udprcvsize);
  fprintf_str(stdout, fmt, "startscript", g.startscript);
  fprintf_str(stdout, fmt, "stopscript", g.stopscript);
  fprintf_str(stdout, fmt, "scheduler", g.scheduler);
  fprintf(stdout, "spooltype %d\n", g.spooltype);
  fprintf_str(stdout, fmt, "spooldir", g.spooldir);
  fprintf(stdout, "spooldb_slots %u\n", g.spooldb_slots);
  fprintf_str(stdout, fmt, "spooldb_fname", g.spooldb_fname);
  fprintf_str(stdout, fmt, "cspoolbdb_dir", g.cspoolbdb_dir);
  fprintf_str(stdout, fmt, "cspoolbdb_name", g.cspoolbdb_name);
  fprintf(stdout, "cspoolbdb_mode %o\n", g.cspoolbdb_mode);
  fprintf(stdout, "cspoolbdb_dbcache_mb %u\n", g.cspoolbdb_dbcache_mb);
  fprintf(stdout, "cspoolbdb_ndb %u\n", g.cspoolbdb_ndb);
  fprintf(stdout, "cspoolbdb_nslots %u\n", g.cspoolbdb_nslots);
  fprintf(stdout, "cspoolbdb_maxsize_per128 %u\n", g.cspoolbdb_maxsize_per128);
  fprintf(stdout, "mspoolbdb_dbcache_mb %u\n", g.mspoolbdb_dbcache_mb);
  fprintf(stdout, "mspoolbdb_ndb %u\n", g.mspoolbdb_ndb);
  fprintf(stdout, "mspoolbdb_nslots %u\n", g.mspoolbdb_nslots);
  fprintf(stdout, "mspoolbdb_maxsize_per128 %u\n", g.mspoolbdb_maxsize_per128);
  fprintf_str(stdout, fmt, "mspoolbdb_dbstats_logfile",
	g.mspoolbdb_dbstats_logfile);
  fprintf(stdout, "mspoolbdb_dbstats_logperiod_secs " "%" PRIuMAX "\n",
	(uintmax_t)g.mspoolbdb_dbstats_logperiod_secs);
  fprintf_str(stdout, fmt, "mspoolbdb_panicfile", g.mspoolbdb_panicfile);
  fprintf(stdout, "mspoolbdb_panicfile_mode %o\n", g.mspoolbdb_panicfile_mode);
  fprintf_str(stdout, fmt, "filterdevdir", g.filterdevdir);
  fprintf(stdout, "filterserver_enable %d\n", g.filterserver_enable); 
  fprintf_str(stdout, fmt, "sysfilterlist", g.sysfilterlist);
  fprintf_str(stdout, fmt, "emwinfilter", g.emwinfilter);
  fprintf_str(stdout, fmt, "emwinfilter_fifo", g.emwinfilter_fifo);
  fprintf(stdout, "emwinfilter_read_timeout_secs %d\n",
	g.emwinfilter_read_timeout_secs);
  fprintf(stdout, "emwinfilter_always %d\n", g.emwinfilter_always);
  fprintf(stdout, "netfilter_enable %d\n", g.netfilter_enable); 
  fprintf_str(stdout, fmt, "netfilter", g.netfilter);
  fprintf(stdout, "httpd_enable %d\n", g.httpd_enable); 
  fprintf_str(stdout, fmt, "httpd", g.httpd);
  fprintf_str(stdout, fmt, "pidfile", g.pidfile);
  fprintf(stdout, "pidfilemode %o\n", g.pidfile_mode);
  fprintf_str(stdout, fmt, "qstatefifo", g.qstatefifo);
  fprintf(stdout, "qstatefifo_mode %o\n", g.qstatefifo_mode);
  fprintf_str(stdout, fmt, "statusfile", g.statusfile);
  fprintf_str(stdout, fmt, "missinglogfile", g.missinglogfile);
  fprintf_str(stdout, fmt, "rtxlogfile", g.rtxlogfile);
  fprintf_str(stdout, fmt, "qstatelogfile", g.qstatelogfile);
  fprintf_str(stdout, fmt, "qdbstatslogfile", g.qdbstatslogfile);

  fprintf_str(stdout, fmt, "serverstatefile", g.serverstatefile);
  fprintf_str(stdout, fmt, "serveractivefile", g.serveractivefile);
  fprintf_str(stdout, fmt, "serverthreadsfile", g.serverthreadsfile);
  fprintf_str(stdout, fmt, "filterserver_statefile", g.filterserver_statefile);
  fprintf_str(stdout, fmt, "slavestatsfile", g.slavestatsfile);
  fprintf(stdout, "productmode %o\n", g.product_mode);
  fprintf(stdout, "subdirmode %o\n", g.subdir_product_mode);
  fprintf(stdout, "spoolsavefmt %d\n", g.spoolsavefmt);
  fprintf(stdout, "nbspstats_logperiod_secs " "%" PRIuMAX "\n",
	(uintmax_t)g.nbspstats_logperiod_secs);
  fprintf(stdout, "qstate_logperiod_secs " "%" PRIuMAX "\n",
	(uintmax_t)g.qstate_logperiod_secs);
  fprintf(stdout, "serverstate_logperiod_secs " "%" PRIuMAX "\n",
	(uintmax_t)g.serverstate_logperiod_secs);
  fprintf(stdout, "serverthreads_logperiod_packets %d\n",
	g.serverthreads_logperiod_packets);
  fprintf(stdout, "serverthreads_logperiod_secs " "%" PRIuMAX "\n",
	(uintmax_t)g.serverthreads_logperiod_secs);
  fprintf(stdout, "servertype %d\n", g.servertype);
  fprintf_str(stdout, fmt, "servername", g.servername);
  fprintf_str(stdout, fmt, "serverport", g.serverport);
  fprintf(stdout, "server_maxclients %d\n", g.server_maxclients);
  fprintf(stdout, "server_so_sndbuf %d\n", g.server_so_sndbuf);
  fprintf(stdout, "server_clientid_timeout_secs %d\n",
	g.server_clientid_timeout_secs);
  fprintf(stdout, "server_clientqlimit_logperiod_secs %d\n",
        g.server_clientqlimit_logperiod_secs);
  fprintf(stdout, "broadcast_read_timeout_secs %d\n",
	g.broadcast_read_timeout_secs);
  fprintf(stdout, "fifo_write_timeout_ms %d\n", g.fifo_write_timeout_ms);
  fprintf(stdout, "client_write_timeout_ms %d\n", g.client_write_timeout_ms);
  fprintf(stdout, "client_write_timeout_retry %d\n",
	g.client_write_timeout_retry);
  fprintf(stdout, "client_reconnect_wait_sleep_secs %d\n",
	g.client_reconnect_wait_sleep_secs);
  fprintf(stdout, "client_reconnect_wait_sleep_retry %d\n",
	g.client_reconnect_wait_sleep_retry);
  fprintf_str(stdout, fmt, "clientoptions", g.clientoptions);

  fprintf(stdout, "memfileblocksize %d\n", g.memfile_blocksize);
  fprintf(stdout, "memfileminsize %d\n", g.memfile_minsize);

  fprintf_str(stdout, fmt, "dbhome", g.dbhome);
  fprintf(stdout, "dbcachemb %d\n", g.dbcache_mb);
  fprintf(stdout, "dbextent %d\n", g.dbextent_size);
  fprintf(stdout, "dbfilemode %o\n", g.dbfile_mode);
  fprintf_str(stdout, fmt, "pctldbfname", g.pctl_dbfname);
  fprintf_str(stdout, fmt, "pctlmfdbfname", g.pctlmf_dbfname);
  fprintf_str(stdout, fmt, "qdbfname", g.qdb_dbfname);

  fprintf(stdout, "queuemaxsizesoft %d\n", g.queue_maxsize_soft);
  fprintf(stdout, "queuemaxsizehard %d\n", g.queue_maxsize_hard);
  fprintf(stdout, "queue_read_timeout_ms %d\n",
	g.queue_read_timeout_ms);
  fprintf(stdout, "queue_quota_logperiod_secs %d\n",
	g.queue_quota_logperiod_secs);

  fprintf(stdout, "pctlmaxsoft %d\n", g.pctl_maxsize_soft);
  fprintf(stdout, "pctlmaxhard %d\n", g.pctl_maxsize_hard);
  fprintf(stdout, "pctlmaxmemsoft %d\n", g.pctl_maxmem_soft);
  fprintf(stdout, "pctlmaxmemhard %d\n", g.pctl_maxmem_hard);
  fprintf(stdout, "pctl_read_timeout_ms %d\n", g.pctl_read_timeout_ms);

  fprintf(stdout, "clientqueuedbcachemb %d\n", g.client_queue_dbcache_mb); 
  fprintf(stdout, "clientqueuemaxsizesoft %d\n", g.client_queue_maxsize_soft);
  fprintf(stdout, "clientqueuemaxsizehard %d\n", g.client_queue_maxsize_hard);
  fprintf(stdout, "client_queue_read_timeout_ms %d\n",
	g.client_queue_read_timeout_ms);

  fprintf_str(stdout, fmt, "rtxdb_dbfname", g.rtxdb_dbfname);
  fprintf(stdout, "rtxdb_slots %u\n", g.rtxdb_slots);
  fprintf(stdout, "rtxdb_truncate_minutes %u\n", g.rtxdb_truncate_minutes);
  fprintf(stdout, "rtxdb_default_process %u\n", g.rtxdb_default_process);

  fprintf(stdout, "loadave_max_hard %d\n", g.loadave_max_hard);
  fprintf(stdout, "loadave_max_soft %d\n", g.loadave_max_soft);
  fprintf(stdout, "loadave_max_sleep_secs %d\n", g.loadave_max_sleep_secs);
  fprintf(stdout, "loadave_checkperiod_secs %d\n", g.loadave_checkperiod_secs);
  fprintf(stdout, "loadave_max_rtx_index %d\n", g.loadave_max_rtx_index);

  fprintf(stdout, "feedmode %d\n", g.feedmode);
  fprintf_str(stdout, fmt, "masterservers", g.masterservers);
  fprintf_str(stdout, fmt, "slave_masterport", g.slave_masterport);
  fprintf(stdout, "slave_read_timeout_secs %d\n", g.slave_read_timeout_secs);
  fprintf(stdout, "slave_read_timeout_retry %d\n", g.slave_read_timeout_retry);
  fprintf(stdout, "slave_reopen_timeout_secs %d\n",
	g.slave_reopen_timeout_secs);
  fprintf(stdout, "slave_so_rcvbuf %d\n", g.slave_so_rcvbuf);
  fprintf(stdout, "slave_stats_logperiod_secs %d\n",
	g.slave_stats_logperiod_secs);
  fprintf(stdout, "slave_reject_duplicates %d\n", g.slave_reject_duplicates);

  fprintf_str(stdout, fmt, "infeedfifo", g.infifo);
  fprintf_str(stdout, fmt, "infeedfifogrp", g.infifo_grp);
  fprintf(stdout, "infeedfifomode %o\n", g.infifo_mode);

  fprintf_str(stdout, fmt, "acceptpatt", g.patt_accept);
  fprintf_str(stdout, fmt, "filterqacceptpatt", g.filterq_patt_accept);
  fprintf_str(stdout, fmt, "serverqpacceptpatt", g.serverq_patt_accept);
  fprintf_str(stdout, fmt, "nbs1acceptpatt", g.nbs1_patt_accept);
  fprintf_str(stdout, fmt, "nbs2acceptpatt", g.nbs2_patt_accept);
  fprintf_str(stdout, fmt, "emwinacceptpatt", g.emwin_patt_accept);
  fprintf_str(stdout, fmt, "savezacceptpatt", g.savez_patt_accept);
  fprintf_str(stdout, fmt, "rtxdbacceptpatt", g.rtxdb_patt_accept);
}

#define VALIDATE_PARAMETER(v, a, b, s) \
  if((v < a) || (v > b)){varname = s; goto end;}

#define VALIDATE_PARAM_L(v, a, s) \
  if(v < a){varname = s; goto end;}

#define VALIDATE_PARAM_H(v, a, s) \
  if(v > a){varname = s; goto end;}

#define VALIDATE_STR(v, s) \
  if((v == NULL) || (v[0] == '\0')){varname = s; goto end;}

int validate_configuration(void){

  char *varname = NULL;

  /* char* user, group, home can be NULL or empty */
  /* mode_t umask	type */
  VALIDATE_STR(g.multicastip, "multicastip");
  VALIDATE_STR(g.multicastip, "multicastport");
  /* char* ifname, ifip  can be NULL or empty */
  VALIDATE_PARAM_L(g.udprcvsize, -1, "udprcvsize");
  /* char* startscript, stopscript  can be NULL or empty. */
  VALIDATE_STR(g.scheduler, "scheduler");
  VALIDATE_PARAMETER(g.spooltype,
	SPOOLTYPE_MIN_VAL, SPOOLTYPE_MAX_VAL, "spooltype");
  VALIDATE_STR(g.spooldir, "spooldir");
  /* unsigned int spooldb_slots  type */
  VALIDATE_STR(g.spooldb_fname, "spooldb_fname");
  VALIDATE_STR(g.cspoolbdb_dir, "cspoolbdb_dir");
  VALIDATE_STR(g.cspoolbdb_name, "cspoolbdb_name");
  /* mode_t cspoolbdb_mode  type */
  VALIDATE_PARAM_L(g.cspoolbdb_dbcache_mb, 1, "cspoolbdb_dbcache_mb");
  VALIDATE_PARAM_L(g.cspoolbdb_ndb, 1, "cspoolbdb_ndb");
  VALIDATE_PARAM_L(g.cspoolbdb_nslots, 1, "cspoolbdb_nslots");
  VALIDATE_PARAM_H(g.cspoolbdb_maxsize_per128, 128,
	"cspoolbdb_maxsize_per128");
  VALIDATE_PARAM_L(g.mspoolbdb_dbcache_mb, 1, "mspoolbdb_dbcache_mb");
  VALIDATE_PARAM_L(g.mspoolbdb_ndb, 1, "mspoolbdb_ndb");
  VALIDATE_PARAM_L(g.mspoolbdb_nslots, 1, "mspoolbdb_nslots");
  VALIDATE_PARAM_H(g.mspoolbdb_maxsize_per128, 128,
	"mspoolbdb_maxsize_per128");
  VALIDATE_STR(g.mspoolbdb_dbstats_logfile, "mspoolbdb_dbstats_logfile");
  VALIDATE_PARAM_L(g.mspoolbdb_dbstats_logperiod_secs, 0,
	"mspoolbdb_dbstats_logperiod_secs");
  VALIDATE_STR(g.mspoolbdb_panicfile, "mspoolbdb_panicfile");
  VALIDATE_STR(g.filterdevdir, "filterdevdir");
  VALIDATE_PARAMETER(g.filterserver_enable, 0, 1, "filterserver_enable");
  /* char* sysfilterlist, emwinfilter, emwinfilter_fifo can be NULL/empty */
  VALIDATE_PARAM_L(g.emwinfilter_read_timeout_secs, 0,
	"emwinfilter_read_timeout_secs");
  VALIDATE_PARAMETER(g.emwinfilter_always, 0, 1, "emwinfilter_always");
  VALIDATE_PARAMETER(g.netfilter_enable, 0, 1, "netfilter_enable");
  /* char* netfilter can be NULL or empty */
  VALIDATE_PARAMETER(g.httpd_enable, 0, 1, "httpd_enable");
  VALIDATE_STR(g.httpd, "httpd");
  VALIDATE_STR(g.pidfile, "pidfile");
  VALIDATE_STR(g.qstatefifo, "qstatefifo");
  VALIDATE_STR(g.statusfile, "statusfile");
  VALIDATE_STR(g.missinglogfile, "missinglogfile");
  VALIDATE_STR(g.rtxlogfile, "rtxfile");
  VALIDATE_STR(g.qstatelogfile, "qstatefile");
  VALIDATE_STR(g.qdbstatslogfile, "qdbstatsfile");
  VALIDATE_STR(g.serverstatefile, "serverstatefile");
  VALIDATE_STR(g.serveractivefile, "serveractivefile");
  VALIDATE_STR(g.serverthreadsfile, "serverthreadsfile");
  VALIDATE_STR(g.filterserver_statefile, "filterserver_statefile");
  VALIDATE_STR(g.slavestatsfile, "slavestatsfile");

  /*
   * mode_t pidfile_mode, mspoolbdb_panicfile_modem, qstatefifo_mode,
   * product_mode, subdir_product_mode
   * (the type restrict the values)
   */
  VALIDATE_PARAM_L(g.spoolsavefmt, 0, "spoolsavefmt");

  VALIDATE_PARAMETER(g.servertype, 0, BUILTIN_SERVER_ALL, "servertype");
  /* char* g.servername can be NUILL or empty */
  VALIDATE_STR(g.serverport, "serverport");
  VALIDATE_PARAM_L(g.server_listen_backlog, 1, "server_listen_backlog");
  VALIDATE_PARAM_L(g.server_maxclients, -1, "server_maxclients");
  VALIDATE_PARAM_L(g.server_so_sndbuf, -1, "server_so_sndbuf");
  VALIDATE_PARAM_L(g.server_clientid_timeout_secs, 1,
	"server_clientid_timeout_secs");
  VALIDATE_PARAM_L(g.server_clientqlimit_logperiod_secs, 1,
	"server_clientqlimit_logperiod_secs");

  VALIDATE_PARAM_L(g.nbspstats_logperiod_secs, 0, "nbspstats_logperiod_secs");
  VALIDATE_PARAM_L(g.qstate_logperiod_secs, 0, "qstate_logperiod_secs");
  VALIDATE_PARAM_L(g.serverstate_logperiod_secs, 0,
	"serverstate_logperiod_secs");

  VALIDATE_PARAM_L(g.serverthreads_logperiod_packets, -1,
	"serverthreads_logperiod_packets");
  VALIDATE_PARAM_L(g.serverthreads_logperiod_secs, 0,
	"serverthreads_logperiod_secs");

  VALIDATE_PARAM_L(g.broadcast_read_timeout_secs, 0,
	"broadcast_read_timeout_secs");
  VALIDATE_PARAM_L(g.fifo_write_timeout_ms, 0, "fifo_write_timeout_ms");
  VALIDATE_PARAM_L(g.client_write_timeout_ms, 0, "client_write_timeout_ms");
  VALIDATE_PARAM_L(g.client_write_timeout_retry, 0,
	"client_write_timeout_retry");
  VALIDATE_PARAM_L(g.client_reconnect_wait_sleep_secs, 0,
	"client_reconnect_wait_sleep_secs");
  VALIDATE_PARAM_L(g.client_reconnect_wait_sleep_retry, 0,
	"client_reconnect_wait_sleep_retry");

  /* char* g.clientoptions can be NULL or empty */
  VALIDATE_PARAM_L(g.memfile_blocksize, MEMFILE_BLOCKSIZE_LIMIT,
		   "memfileblocksize");
  VALIDATE_PARAM_L(g.memfile_minsize, MEMFILE_MINSIZE_LIMIT, "memfileminsize");

  VALIDATE_STR(g.dbhome, "dbhome");
  VALIDATE_PARAM_L(g.dbcache_mb, 1, "dbcachemb");
  VALIDATE_PARAM_L(g.dbextent_size, 1, "dbextent");
  /* mode_t dbfile_mode type */
  /* 
   * char* g.pctl_dbfname, g.pctlmf_dbfname, g.qdb_dbfname, 
   * can be NULL or empty (for memory based queues).
   */
  VALIDATE_PARAM_L(g.queue_maxsize_soft, 0, "queuemaxsoft");
  VALIDATE_PARAM_L(g.queue_maxsize_hard, 0, "queuemaxhard");
  VALIDATE_PARAM_L(g.queue_read_timeout_ms, 0,
	"queue_read_timeout_ms");
  VALIDATE_PARAM_L(g.queue_quota_logperiod_secs, 0,
	"queue_quota_logperiod_secs");
  VALIDATE_PARAM_L(g.pctl_maxsize_soft, 0, "pctlmaxsoft");
  VALIDATE_PARAM_L(g.pctl_maxsize_hard, 0, "pctlmaxhard");
  VALIDATE_PARAM_L(g.pctl_maxmem_soft, 0, "pctlmaxmemsoft");
  VALIDATE_PARAM_L(g.pctl_maxmem_hard, 0, "pctlmaxmemhard");
  VALIDATE_PARAM_L(g.pctl_read_timeout_ms, 0, "pctl_read_timeout_ms");
  VALIDATE_PARAM_L(g.client_queue_dbcache_mb, 0, "clientqueuedbcachemb");
  VALIDATE_PARAM_L(g.client_queue_maxsize_soft, 0, "cllientqueuemaxsoft");
  VALIDATE_PARAM_L(g.client_queue_maxsize_hard, 0, "clientqueuemaxhard");
  VALIDATE_PARAM_L(g.client_queue_read_timeout_ms, 0,
	"client_queue_read_timeout_ms");
  /* char* rtxdb_dbfname can be NULL or empty */
  /* unsigned int rtxdb_slots type and can be zero */
  VALIDATE_PARAM_L(g.rtxdb_truncate_minutes, 1, "rtxdb_truncate_minutes");
  VALIDATE_PARAM_L(g.rtxdb_default_process, 0, "rtxdb_default_process");
  VALIDATE_PARAM_L(g.loadave_max_hard, 0, "loadave_max_hard");
  VALIDATE_PARAM_L(g.loadave_max_soft, 0, "loadave_max_soft");
  VALIDATE_PARAM_L(g.loadave_max_sleep_secs, 0, "loadave_max_sleep_secs");
  VALIDATE_PARAM_L(g.loadave_checkperiod_secs, 0, "loadave_checkperiod_secs");
  VALIDATE_PARAM_L(g.loadave_max_rtx_index, 0, "loadave_max_rtx_index");
  VALIDATE_PARAM_L(g.feedmode, 1, "feedmode");
  /* char* g.masterservers can be NULL or empty */
  VALIDATE_STR(g.slave_masterport, "slave_masterport");
  VALIDATE_PARAM_L(g.slave_read_timeout_secs, 0, "slave_read_timeout_secs");
  VALIDATE_PARAM_L(g.slave_read_timeout_retry, 0, "slave_read_timeout_retry");
  VALIDATE_PARAM_L(g.slave_reopen_timeout_secs, 0,
	"slave_reopen_timeout_secs");
  VALIDATE_PARAM_L(g.slave_so_rcvbuf, -1, "slave_so_rcvbuf");
  VALIDATE_PARAM_L(g.slave_stats_logperiod_secs, 0,
	"slave_stats_logperiod_secs");
  VALIDATE_PARAM_L(g.slave_reject_duplicates, 0,
	"slave_reject_duplicates");

  VALIDATE_STR(g.infifo, "infeedfifo");
  /* mode_t infifo_mode type */
  VALIDATE_STR(g.infifo_grp, "infeedfifogrp");
  /*
   * All xxx_patt_xxx can be NULL or empty
   *
   * char* patt_accept, filterq_patt_accept, serverq_patt_accept,
   * nbs1_patt_accept, nbs2_patt_accept, emwin_patt_accept,
   * savez_patt_accept, rtxdb_patt_accept
   */

 end:

  if(varname != NULL){
    warnx("Invalid value of %s", varname);
    print_confoptions();
    return(1);
  }

  return(0);
}

static void fprintf_str(FILE *f, char *fmt,
			char *name, char *value){
  char *nullstr = "NULL";
  char *emptystr = "\"\"";

  if(value == NULL)
    fprintf(f, fmt, name, nullstr);
  else if(value[0] == '\0')
    fprintf(f, fmt, name, emptystr);
  else
    fprintf(f, fmt, name, value);
}
