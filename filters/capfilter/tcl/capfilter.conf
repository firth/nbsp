#
# $Id$
#

#
# Set the hostport to the appropriate "server:port" value
#

#
# Defaults
#
### set capfilter(hostport) "[info hostname]:8015";
#
### set capfilter(conf)	[file join $common(confdir) "capfilter.conf"];
### set capfilter(rc)	[file join $common(confdir) "capfilter.rc"];
### set capfilter(prerc)    "";
### set capfilter(postrc)   "";
### set capfilter(rcbin)    "";
### set capfilter(localconfdirs) $common(localconfdirs);
### set capfilter(rcdir)	[file join $common(rcdir) "cap"];
### set capfilter(datadir)  [file join $common(datadir) "cap"];
#
### set capfilter(def) [file join $common(confdir) "capfilter.def"];
#
### set capfilter(fileppathfmt) {files/$rc(awips2)/$rc(cap,identifier).xml};
#   set capfilter(fileppathfmt) {files/$rc(awips2)/$rc(wmotime)_$rc(seq).xml};
### set capfilter(invppathfmt) {inv/$rc(cap,expires,date).log};
### set capfilter(invdir) "inv";   # Needed by nbspcapcleanup
#
# catalog paths and templates
#
### set capfilter(catppath,global) {cat/global.xml};
### set capfilter(catppathfmt,state) {cat/state/$rc(cap,state).xml};
### set capfilter(catppathfmt,zone) {cat/zone/$rc(cap,state)/$rc(cap,zone).xml};
#
### set capfilter(txmldirs) $capfilter(localconfdirs);
### set capfilter(txmlsubdir) "cap";
### set capfilter(atomtxml,global) "global.txml";
### set capfilter(atomtxml,state) "state.txml";
### set capfilter(atomtxml,zone) "zone.txml";

#
#
# Read the local overrides
#
set _confname		"capfilter.conf";

if {[info exists source_capfilter_conf_defined]} {
    return;
}
set source_capfilter_conf_defined 1;

foreach _d $capfilter(localconfdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset _d;
unset _confname;
unset _localconfname;
