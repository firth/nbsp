#
# $Id$
#

set capfilter(hostport) "[info hostname]:8015";
#
set capfilter(conf)	[file join $common(confdir) "capfilter.conf"];
set capfilter(rc)	[file join $common(confdir) "capfilter.rc"];
set capfilter(prerc)    "";
set capfilter(postrc)   "";
set capfilter(rcbin)    "";
set capfilter(localconfdirs) $common(localconfdirs);
set capfilter(rcdir)	[file join $common(rcdir) "cap"];
set capfilter(datadir)  [file join $common(datadir) "cap"];
#
set capfilter(def) [file join $common(confdir) "capfilter.def"];
#
# set capfilter(fileppathfmt) {files/$rc(awips2)/$rc(wmotime)_$rc(seq).xml};
set capfilter(fileppathfmt) {files/$rc(awips2)/$rc(cap,identifier).xml};
set capfilter(catppath,global) {cat/global.xml};
set capfilter(catppathfmt,bystate) {cat/state/$rc(cap,state).xml};
set capfilter(catppathfmt,byzone) {cat/zone/$rc(cap,state)/$rc(cap,zone).xml};
#
set capfilter(invppathfmt) {inv/$rc(cap,expires,date).log};
#
set capfilter(txmldirs) $capfilter(localconfdirs);
set capfilter(txmlsubdir) "cap";
set capfilter(atomtxml) "atom.txml";
set capfilter(def) [file join $common(confdir) "capfilter.def"];
#

# Overrides in the configuration file. 
if {[file exists $capfilter(conf)] == 1} {
    source $capfilter(conf);
}

#
# lib
#
proc caplib_get_identifier {body} {

    set re {<identifier>(.+)</identifier>};

    set r "";
    if {[regexp $re  $body match s]} {
	set r $s;
    }

    return [string tolower $r];
}

proc caplib_get_zone {body} {

    set re \
    {<geocode>\s+<valueName>UGC</valueName>\s+<value>(.+)</value>\s+</geocode>};

    set r "";
    if {[regexp $re $body match s]} {
	set r $s;
    }

    return [string tolower $r];
}

proc caplib_get_expires {body} {

    set re {<expires>(.+)</expires>};

    set r "";
    if {[regexp $re $body match s]} {
	set r $s;
    }

    return $r;
}

proc caplib_get_summary {body} {

    set re {<summary>(.+)</summary>};

    set r "";
    if {[regexp $re $body match s]} {
	set r $s;
    }

    return $r;
}
