#
# $Id$
#
# Sample configuration for the GrADS-compatible filter.

# The rules file
#
## set gribfilter(rc)	[file join $common(confdir) "gribfilter.rc"];
## set gribfilter(prerc) [file join $common(confdir) "gribfilterpre.rc"];
## set gribfilter(postrc) [file join $common(confdir) "gribfilterpost.rc"];

# Directories to look for local conf and rc files
#
## set gribfilter(localconfdirs) $common(localconfdirs);
## set gribfilter(rcdir)	[file join $common(rcdir) "grib"];
## set gribfilter(rcfiles)	[list];

# The data directory where processed files will be stored.
# (This directory must exist.)
#
## set gribfilter(datadir)	[file join $common(datadir) "grib"];

# Subdirectories for data, control files and image files
#
## set gribfilter(rcdir)	[file join $common(rcdir) "grib"];
## set gribfilter(datadir)	[file join $common(datadir) "grib"];
## set gribfilter(grbdatadir)	[file join "data" "grb"];
## set gribfilter(ctldatadir)	[file join "data" "ctl"];
## set gribfilter(idxdatadir)	[file join "data" "idx"];
## set gribfilter(pdefdatadir)	[file join "data" "pdef"];
## set gribfilter(catalogdir)	[file join "data" "cat"];
## set gribfilter(gridsdatadir)	[file join "data" "grids"];
## set gribfilter(imgdatadir)	"maps";

# File extensions
#
## set gribfilter(grbfext)	".grb";
## set gribfilter(ctlfext)	".ctl";
## set gribfilter(idxfext)	".idx";
## set gribfilter(pdeffext)	".pdef";

# grb and ctl catalog files
#
## set gribfilter(grbcatalog)	"grb.cat";
## set gribfilter(ctlcatalog)	"ctl.cat";

# The <model>_<grid> combinations that will be saved in the "grids" subdir.
# To restrict the grids for specific models a regexp such as
#
#          {gfs_(211|212|215)|nam_(212|215)|rap}
#
# can be used. The setting below saves all grids for the specifed models;
#
# set gribfilter(gridsmodels_uwildpatt) {gefs|gfs|hrrr|nam|rap};
#
# this is the default setting:
#
## set gribfilter(gridsmodels_uwildpatt) {gfs|nam|rap};

# The GrADS package must have been installed to enable the following.
#
# Control files (for GrADS) will be generated only for grb files whose names
# math this pattern. Setting the variable to "" will disable the checking
# and the control files will be generated for all the grb files. Setting
# the gradsctl_enable variable to 0 disables the generation of the control
# files altogether. (That setting is useful if it is desired to enable the
# gribfilter without using GrADS. In that case, the variable gradsplotsenable
# below must also be set to 0. See gribfilter.README and grads-grib.README)
# The pattern here excludes grb2; also grids 21-24, 61-64 of gfs because
# grib2ctl returns the message
#     *** script needs to be modified *** unknown user-defined grid
#
## set gribfilter(gradsctl_enable) 0;
## set gribfilter(gradsctl_uwildpatt) {gfs,!gfs_[26][1-4](_|\.),nam,rap};
#
#
# The configuration file that is passed to the scheduler to
# produce the graphics. Setting the variable scheduler_senable to 0 disables
# the creation of the plots. Since the ctl files and the plots are generated
# separately (the ctl files are created in the background or by the slave
# filters in work-crew mode) it is better to schedule the creation of the
# plots a few minutes after the hour to allow the generation of the ctl
# files to be complete (this is taken care of in the scheduler.rc file).
# The generation of the plots requires the gradsctl_enable setting above
# as well.
#
## set gribfilter(scheduler_enable) 0;
## set gribfilter(schedule) [file join $common(confdir) \
	"gribfilter-schedule.rc"];
## set gribfilter(schedule_run_period) "minutely";       # run every minute

# These settings below are used by nbspgribplot and nbspgribplotc.
# The gsdirlist is a list of directories where
# those tools will look for the grads scripts specified in the scheduler
# configuration file (gribfilter-schedule.rc). The setting below is the
# defaults and site subdirectories directories of the etc/nbsp directory.
# The ".png" extension is used only to construct the default imgfile name
# that is passed to the scripts. 
#
## set gribfilter(imgfext)	".png";
## set gribfilter(gsdirlist)	$common(localconfdirs);

# Used by nbspgradsh
## set gribfilter(gradsprompt)	"ga*";

#
# Read the local overrides
#
if {[info exists source_gribfilter_conf_defined]} {
    return;
}
set source_gribfilter_conf_defined 1;

set _confname "gribfilter.conf";
foreach _d $gribfilter(localconfdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset -nocomplain _d;
unset -nocomplain _localconfname;
unset _confname;
