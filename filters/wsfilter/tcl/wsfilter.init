#
# $Id$
#

#
# This file is read by all the command-line tools also.
#

# default configuration file
set wsfilter(conf) [file join $common(confdir) "wsfilter.conf"];
set wsfilter(localconfdirs)  $common(localconfdirs);

# wsfilter (WS) data directories
set wsfilter(ws_datadir) [file join $common(datadir) weatherscope];
set wsfilter(ws_metardir) "metar";
set wsfilter(ws_upperairdir) "upperair";
set wsfilter(ws_gribdir) "model";
#
set wsfilter(schedule) [file join $common(confdir) "wsfilter-schedule.rc"];
#
# or "wsfilter-schedule-nogrib.rc"
#
set wsfilter(schedule_run_period) "minutely";	# run every minute

# The default configuration settings below that depend on the
# metar, ua, and grib filters, cannot be modified in the configuration file.

interp create slave;
slave eval {

    source "/usr/local/etc/nbsp/filters.conf";

    foreach _i [list metarfilter uafilter gribfilter] {
	set _init ${_i}.init;
        source [file join $common(libdir) ${_init}];
    }
}

# metar
set wsfilter(metar_basedir) [slave eval {
    return [file join $metarfilter(datadir) $metarfilter(ws_dir)];
}];

set wsfilter(metar_daily_subdir) [slave eval {
    return $metarfilter(ws_daily_subdir);
}];

set wsfilter(metar_hourly_subdir) [slave eval {
    return $metarfilter(ws_hourly_subdir);
}];

set wsfilter(metar_fext) [slave eval {
    return $metarfilter(mwfext);
}];

set wsfilter(metar_mdf_fext) ".mdf";
set wsfilter(metar_mts_fext) ".mts";
set wsfilter(metar_undef) "-996";
set wsfilter(metar_siteloc) [file join $common(confdir) \
	"wsfilter-metar-siteloc.def"];
## This not used (only for reference)
## set wsfilter(metar_sitenames) [file join $common(confdir) \
##	"wsfilter-metar-sitenames.def"];

# upperair
set wsfilter(upperair_basedir) [slave eval {
    return [file join $uafilter(datadir) $uafilter(fm35_dir)];
}];

set wsfilter(upperair_daily_subdir) [slave eval {
    return $uafilter(fm35_daily_subdir);
}];

set wsfilter(upperair_hourly_subdir) [slave eval {
    return $uafilter(fm35_hourly_subdir);
}];

set wsfilter(upperair_fext) [slave eval {
    return $uafilter(fm35_fext);
}];

set wsfilter(upperair_mdf_fext) ".mdf";
set wsfilter(upperair_undef) "-996";
set wsfilter(upperair_siteloc) [file join $common(confdir) \
	"wsfilter-upperair-siteloc.def"];

# grib
set wsfilter(grib_ctl_basedir)  [slave eval {
    return [file join $gribfilter(datadir) $gribfilter(ctldatadir)];
}];

set wsfilter(grib_mdf_fext) ".mdf";
set wsfilter(grib_undef) "-996";
set wsfilter(grads_undef_regex) {9.999e\+20|\?};

interp delete slave;

#
# configuration of model parameters
#
set wsfilter(grib_prslevels,default) \
	[list 1000 900 800 700 600 500 400 300 200 100];

# gfs 211
set wsfilter(grib_prslevels,gfs,211) $wsfilter(grib_prslevels,default);
set wsfilter(grib_params,sfc,gfs,211) "pressfc";
set wsfilter(grib_params,trop,gfs,211) [list prestrp tmptrp ugrdtrp vgrdtrp];
set wsfilter(grib_params,prs,gfs,211) [list \
					hgtprs tmpprs rhprs ugrdprs vgrdprs];
set wsfilter(grib_param_titles,sfc,gfs,211) "pres_sfc";
set wsfilter(grib_param_titles,trop,gfs,211) \
	[list pres_trop tmp_trop ws_trop wd_trop];
set wsfilter(grib_param_titles,prs,gfs,211) [list hgt tmp rh ws wd];

# ruc 236
set wsfilter(grib_prslevels,ruc,236) $wsfilter(grib_prslevels,default);
set wsfilter(grib_params,sfc,ruc,236) "pressfc";
set wsfilter(grib_params,trop,ruc,236) [list prestrp tmptrp ugrdtrp vgrdtrp];
set wsfilter(grib_params,prs,ruc,236) [list \
					hgtprs tmpprs rhprs ugrdprs vgrdprs];
set wsfilter(grib_param_titles,sfc,ruc,236) "pres_sfc";
set wsfilter(grib_param_titles,trop,ruc,236) \
	[list pres_trop tmp_trop ws_trop wd_trop];
set wsfilter(grib_param_titles,prs,ruc,236) [list hgt tmp rh ws wd];

# nam 207
set wsfilter(grib_prslevels,nam,207) $wsfilter(grib_prslevels,default);
set wsfilter(grib_params,sfc,nam,207) "pressfc";
set wsfilter(grib_params,trop,nam,207) [list];
set wsfilter(grib_params,prs,nam,207) [list \
					hgtprs tmpprs rhprs ugrdprs vgrdprs];
set wsfilter(grib_param_titles,sfc,nam,207) "pres_sfc";
set wsfilter(grib_param_titles,trop,nam,207) [list];
set wsfilter(grib_param_titles,prs,nam,207) [list hgt tmp rh ws wd];

# mrf 204
set wsfilter(grib_prslevels,mrf,204) [list 1000 850 700 500 300 250];
set wsfilter(grib_params,sfc,mrf,204) "prmslmsl";
set wsfilter(grib_params,trop,mrf,204) [list];
set wsfilter(grib_params,prs,mrf,204) [list \
					hgtprs tmpprs rhprs ugrdprs vgrdprs];
set wsfilter(grib_param_titles,sfc,mrf,204) "pres_msl";
set wsfilter(grib_param_titles,trop,mrf,204) [list];
set wsfilter(grib_param_titles,prs,mrf,204) [list hgt tmp rh ws wd];

# mrf 205
set wsfilter(grib_prslevels,mrf,205) [list 1000 850 700 500 300 250];
set wsfilter(grib_params,sfc,mrf,205) "prmslmsl";
set wsfilter(grib_params,trop,mrf,205) [list];
set wsfilter(grib_params,prs,mrf,205) [list \
					hgtprs tmpprs rhprs ugrdprs vgrdprs];
set wsfilter(grib_param_titles,sfc,mrf,205) "pres_msl";
set wsfilter(grib_param_titles,trop,mrf,205) [list];
set wsfilter(grib_param_titles,prs,mrf,205) [list hgt tmp rh ws wd];

# The local overrides
if {[file exists $wsfilter(conf)]} {
    source $wsfilter(conf);
}

#
# Common functions
#
proc wsfilter_strip_zeros {v} {

    set r [string trimleft $v 0];
    if {$r eq ""} {
        set r 0;
    }

    return $r;
}
